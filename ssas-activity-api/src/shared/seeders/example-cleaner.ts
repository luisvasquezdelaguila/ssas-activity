#!/usr/bin/env node

/**
 * Script de ejemplo para demostrar el uso del Database Cleaner
 * 
 * Ejecutar con: ts-node src/shared/seeders/example-cleaner.ts
 */

import { QuickDatabaseCleaner, quickCleanDB, quickStatsDB, quickResetDB } from './quick-cleaner';
import { DatabaseCleaner } from './database-cleaner';

async function exampleUsage() {
  console.log('üßπ Ejemplo de uso del Database Cleaner\n');

  try {
    // Opci√≥n 1: Usar funciones de utilidad r√°pidas
    console.log('üìä 1. Mostrando estad√≠sticas con funci√≥n r√°pida:');
    await quickStatsDB();

    console.log('\nüßπ 2. Limpiando DB con funci√≥n r√°pida:');
    await quickCleanDB();

    // Opci√≥n 2: Usar la clase QuickDatabaseCleaner
    console.log('\nüîß 3. Usando la clase QuickDatabaseCleaner:');
    const cleaner = new QuickDatabaseCleaner();
    
    // Limpiar colecciones espec√≠ficas
    await cleaner.cleanSpecificCollections(['users', 'companies']);
    
    // Mostrar estad√≠sticas
    await cleaner.showStats();

    // Opci√≥n 3: Usar DatabaseCleaner directamente
    console.log('\n‚öôÔ∏è 4. Usando DatabaseCleaner directamente:');
    
    // Necesitar√≠as manejar la conexi√≥n manualmente
    // await mongoose.connect(...);
    // await DatabaseCleaner.cleanDatabase();
    // await mongoose.disconnect();

    console.log('\n‚ú® Ejemplo completado exitosamente');

  } catch (error) {
    console.error('‚ùå Error en el ejemplo:', error);
    process.exit(1);
  }
}

// Ejecutar el ejemplo si este archivo se ejecuta directamente
if (require.main === module) {
  exampleUsage()
    .then(() => {
      console.log('\nüéâ Ejemplo finalizado');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error ejecutando ejemplo:', error);
      process.exit(1);
    });
}

export { exampleUsage };
